swagger: "2.0"
info:
  description: "OVE (Open Visualisation Environment) is an open-source software stack, designed to be used in large scale visualisation environments like the [Imperial College](http://www.imperial.ac.uk) [Data Science Institute's](http://www.imperial.ac.uk/data-science/) [Data Observatory](http://www.imperial.ac.uk/data-science/data-observatory/). OVE applications are applications designed to work with the OVE core. They are launched and managed within the browser-based OVE environment. Each OVE application exposes a standard control API and in some cases some application specific APIs."
  version: "@VERSION"
  title: "@NAME"
  contact:
    email: "@AUTHOR"
  license:
    name: "@LICENSE License"
    url: "https://raw.githubusercontent.com/ove/ove/master/LICENSE"
basePath: "/"
tags:
- name: "named state"
  description: "Named state configurations stored within the application"
- name: "runtime state"
  description: "Runtime state information cached within the application"
- name: "state transformations"
  description: "Operations related to transforming states"
- name: "common operations"
  description: "Operations that can be performed on any application"
schemes:
- "http"
paths:
  /flush:
    post:
      tags:
      - "common operations"
      summary: "Restores the application state and configuration to what they were when the application started"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
  /persistence:
    post:
      tags:
      - "common operations"
      summary: "Sets the URL of the persistence service"
      parameters:
      - name: "body"
        in: "body"
        schema:
          type: "object"
          properties:
            url:
              type: "string"
              description: "URL of the persistence service" 
        required: true
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
        400:
          description: "bad request"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
                description: "Returns an error message 'invalid request' if the required parameter 'url' was not provided/"
    delete:
      tags:
      - "common operations"
      summary: "Removes the URL of the persistence service, if it exists"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
  /diff:
    post:
      tags:
      - "state transformations"
      summary: "Calculates difference between provided source and target states"
      parameters:
      - name: "body"
        in: "body"
        schema:
          type: "object"
          properties:
            source:
              type: "object"
              description: "Source state"
            target:
              type: "object"
              description: "Target state"
        required: true
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Transformation"
        501:
          description: "not implemented"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
                description: "Returns an error message 'operation not implemented' if the operation was not implemented."
        400:
          description: "bad request"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
                description: "Returns an error message 'invalid states' if either source or target state was not provided or if the operation failed."
  /name:
    get:
      tags:
      - "common operations"
      summary: "Reads the name of the application"
      produces:
      - "application/json"
      responses:
        200:
          schema:
            type: "string"
            description: "Name of application"
          description: "successful operation"
  /state/{name}/diff:
    post:
      tags:
      - "state transformations"
      summary: "Calculates difference between a named state and a target state"
      parameters:
      - name: "name"
        in: "path"
        type: "string"
        description: "Name of state"
        required: true
      - name: "body"
        in: "body"
        schema:
          type: "object"
          properties:
            target:
              type: "object"
              description: "Target state"
        required: true
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Transformation"
        501:
          description: "not implemented"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
                description: "Returns an error message 'operation not implemented' if the operation was not implemented."
        400:
          description: "bad request"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
                description: "Returns an error message 'invalid state name' if no state by the given name was found. Returns an error message 'invalid states' if the target state was not provided or if the operation failed."
  /state/{name}/transform:
    post:
      tags:
      - "state transformations"
      summary: "Applies given transformation on a named state and returns the new configuration of named state"
      parameters:
      - name: "name"
        in: "path"
        type: "string"
        description: "Name of state"
        required: true
      - name: "body"
        in: "body"
        description: "Transformation"
        schema:
          $ref: "#/definitions/Transformation"
        required: true
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "object"
        501:
          description: "not implemented"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
                description: "Returns an error message 'operation not implemented' if the operation was not implemented."
        400:
          description: "bad request"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
                description: "Returns an error message 'invalid state name' if no state by the given name was found. Returns an error message 'invalid transformation' if the transformation was not provided or cannot be made."
  /state/{name}:
    get:
      tags:
      - "named state"
      summary: "Reads configuration of named state"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "path"
        type: "string"
        description: "Name of state"
        required: true
      responses:
        200:
          description: "successful operation"
          schema:
            type: "object"
        400:
          description: "bad request"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
                description: "Returns an error message 'invalid state name' if no state by the given name was found."
    post:
      tags:
      - "named state"
      summary: "Creates or updates named state with provided configuration"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "path"
        type: "string"
        description: "Name of state"
        required: true
      - in: "body"
        name: "body"
        description: "State configuration"
        required: true
        schema:
            type: "object"
      responses:
        200:
          description: "successful operation"
    delete:
      tags:
      - "named state"
      summary: "Deletes configuration of named state"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "path"
        type: "string"
        description: "Name of state"
        required: true
      responses:
        200:
          description: "successful operation"
          schema:
            type: "object"
        400:
          description: "bad request"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
                description: "Returns an error message 'invalid state name' if no state by the given name was found."
  /{sectionId}/state/diff:
    post:
      tags:
      - "state transformations"
      summary: "Calculates difference between a configuration of given section and a target state"
      parameters:
      - name: "sectionId"
        in: "path"
        type: "string"
        description: "Section ID"
        required: true
      - name: "body"
        in: "body"
        schema:
          type: "object"
          properties:
            target:
              type: "object"
              description: "Target state"
        required: true
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Transformation"
        501:
          description: "not implemented"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
                description: "Returns an error message 'operation not implemented' if the operation was not implemented."
        400:
          description: "bad request"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
                description: "Returns an error message 'invalid section id' if no state configuration was found for the given section. Returns an error message 'invalid states' if the target state was not provided or if the operation failed."
  /{sectionId}/state/transform:
    post:
      tags:
      - "state transformations"
      summary: "Applies given transformation on the state configuration of given section and returns the new state configuration of given section"
      parameters:
      - name: "sectionId"
        in: "path"
        type: "string"
        description: "Section ID"
        required: true
      - name: "body"
        in: "body"
        description: "Transformation"
        schema:
          $ref: "#/definitions/Transformation"
        required: true
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Transformation"
        501:
          description: "not implemented"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
                description: "Returns an error message 'operation not implemented' if the operation was not implemented."
        400:
          description: "bad request"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
                description: "Returns an error message 'invalid section id' if no state configuration was found for the given section. Returns an error message 'invalid transformation' if the transformation was not provided or cannot be made."
  /{sectionId}/state:
    get:
      tags:
      - "runtime state"
      summary: "Reads state configuration of given section"
      produces:
      - "application/json"
      parameters:
      - name: "sectionId"
        in: "path"
        type: "string"
        description: "Section ID"
        required: true
      responses:
        200:
          description: "successful operation"
          schema:
            type: "object"
        204:
          description: "no state found"
    post:
      tags:
      - "runtime state"
      summary: "Creates or updates state configuration of given section"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "sectionId"
        in: "path"
        type: "string"
        description: "Section ID"
        required: true
      - in: "body"
        name: "body"
        description: "State configuration"
        required: true
        schema:
            type: "object"
      responses:
        200:
          description: "successful operation"
  /state:
    get:
      tags:
      - "runtime state"
      summary: "Reads configuration of all states corresponding to all active sections"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              type: "object"
        204:
          description: "no state found"
definitions:
  Transformation:
    description: "A transformation from one state to another"
    type: "object"
    properties:
      zoom:
        type: "number"
        format: "float"
        example: 1.234
      pan:
        type: "object"
        properties:
          x:
            type: "integer"
            format: "int32"
            example: 100
          y:
            type: "integer"
            format: "int32"
            example: 100
externalDocs:
  description: "Find out more about OVE"
  url: "https://ove.readthedocs.io/en/stable/"
